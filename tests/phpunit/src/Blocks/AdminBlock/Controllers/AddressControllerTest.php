<?php

namespace Jet\Test\Blocks\AdminBlock\Controllers;


/**
 * Class AddressControllerTest
 * @package Jet\Test\Blocks\AdminBlock\Controllers
 */
class AddressControllerTest extends AdminControllerTest
{
    /**
     *
     */
    public function setUp()
    {
        parent::setUp();
        $this->logAuth(1);
        $this->em->getConnection()->beginTransaction();
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->em->getConnection()->rollBack();
    }

    /**
     * @return array
     */
    public function addressProvider()
    {
        return [
            ['GET', 1, [
                'id' => 1,
                'account' => 1,
                'address' => '17 Rue Portefoin',
                'city' => 'Paris 3',
                'postal_code' => '75003',
                'country' => 'FRANCE',
                'latitude' => 48.8639241,
                'longitude' => 2.3592936
            ], 'error', 'Requête non autorisée'],
            ['POST', 1, [
                'id' => 1,
                'account' => 'test',
                'address' => '17 Rue Portefoin',
                'city' => 'Paris 3',
                'postal_code' => '75003',
                'country' => 'FRANCE',
                'latitude' => 48.8639241,
                'longitude' => 2.3592936
            ], 'error', ['society' => ['numeric' => 'L\'id du compte est requis pour assigner cette adresse à celui-ci']]],
            ['POST', 1, [
                'id' => 1,
                'account' => 100,
                'address' => '17 Rue Portefoin',
                'city' => 'Paris 3',
                'postal_code' => '75003',
                'country' => 'FRANCE',
                'latitude' => 48.8639241,
                'longitude' => 2.3592936
            ], 'error', 'Société non trouvée'],
            ['POST', 1, [
                'id' => 1,
                'account' => 1,
                'address' => '45 Rue Alexandre Fourny',
                'city' => 'Champigny',
                'postal_code' => '94500',
                'country' => 'FRANCE',
                'latitude' => 48.8639241,
                'longitude' => 2.3592936
            ], 'success', 'L\'adresse a bien été enregistrée'],
        ];
    }

    /**
     * @dataProvider addressProvider
     * @param $method
     * @param $id
     * @param $address
     * @param $status
     * @param $message
     */
    public function testUpdateOrCreate($method, $id, $address, $status, $message){
        $_SERVER['REQUEST_METHOD'] = $method;
        $_POST = $address;
        $response = $this->callMethod('Jet\AdminBlock\Controllers\AddressController', 'updateOrCreate', [$id]);
        $this->assertEquals($status, $response['status']);
        $this->assertEquals($message, $response['message']);
        $_SERVER['REQUEST_METHOD'] = 'GET';
    }

    /**
     * @return array
     */
    public function addressLocateProvider()
    {
        return [
            [
                'address', [
                    'address' => '',
                    'city' => '',
                    'postal_code' => '',
                    'country' => '',
                ], 'error', 'Impossible de localiser l\'adresse', []
            ],
            [
                'add',[
                    'address' => '17 Rue Portefoin',
                    'city' => 'Paris 3',
                    'postal_code' => '75003',
                    'country' => 'FRANCE',
                ], 'error', 'Adresse non trouvée', []
            ],
            [
                'address', [
                    'address' => '17 Rue Portefoin',
                    'city' => 'Paris 3',
                    'postal_code' => '75003',
                    'country' => 'FRANCE',
                ], 'success', '', [48.8639241,2.3592936]
            ],
        ];
    }

    /**
     * @dataProvider addressLocateProvider
     * @param $key
     * @param $address
     * @param $status
     * @param $message
     * @param $xy
     */
    public function testLocate($key, $address, $status, $message, $xy){
        $_GET[$key] = $address;
        $response = $this->callMethod('Jet\AdminBlock\Controllers\AddressController', 'locate');
        $this->assertEquals($status, $response['status']);
        if($response['status'] == 'error')
            $this->assertEquals($message, $response['message']);
        else {
            $this->assertEquals($xy[0], $response['latitude']);
            $this->assertEquals($xy[1], $response['longitude']);
        }
    }
}