<?php

namespace Jet\Test\Blocks\AdminBlock\Controllers;


/**
 * Class CustomFieldControllerTest
 * @package Jet\Test\Blocks\AdminBlock\Controllers
 */
class CustomFieldControllerTest extends AdminControllerTest
{
    /**
     *
     */
    public function setUp()
    {
        parent::setUp();
        $this->logAuth(1);
        $this->em->getConnection()->beginTransaction();
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
        $this->em->getConnection()->rollBack();
    }

    /**
     * @return array
     */
    public function websiteProvider()
    {
        return [
            [20, 'error', 'Impossible de trouver le site web'],
            [2, 'success', 7],
            [5, 'success', 10],
        ];
    }

    /**
     * @dataProvider websiteProvider
     * @param $website
     * @param $status
     * @param $result
     */
    public function testAll($website, $status, $result)
    {
        $response = $this->callMethod('Jet\AdminBlock\Controllers\CustomFieldController', 'all', [$website]);
        $this->assertEquals($status, $response['status']);
        if ($response['status'] == 'success')
            $this->assertCount($result, $response['content']['data']);
        else
            $this->assertEquals($result, $response['message']);
    }

    /**
     * @return array
     */
    public function adminRenderProvider()
    {
        return [
            [1, 10, [], 'error', 'Vous n\'avez pas les permissions pour voir ces contenus'],
            [1, 1, null, 'error', 'ParamÃ¨tres non trouvÃ©s'],
            [20, 1, ['rules' => 'test'], 'error', 'Impossible de trouver le site'],
            [3, 1, [
                'everywhere' => '',
                'publication_type' => 'page',
                'user_role' => 1,
                'page' => 5,
                'model' => 23,
                'page_type' =>'static'
            ], 'success', 3],
        ];
    }

    /**
     * @dataProvider adminRenderProvider
     * @param $website
     * @param $auth
     * @param $contents
     * @param $status
     * @param $result
     */
    public function testAdminRender($website, $auth, $contents, $status, $result)
    {
        if (!is_null($contents)) $_GET['params'] = $contents;
        $this->logoutAuth();
        $this->logAuth($auth);
        $response = $this->callMethod('Jet\AdminBlock\Controllers\CustomFieldController', 'adminRender', ['auth' => $this->auth, 'website' => $website]);
        $this->assertEquals($status, $response['status']);
        if ($response['status'] == 'success')
            $this->assertGreaterThanOrEqual($result, $response['resource']);
        else
            $this->assertEquals($result, $response['message']);
    }

    /**
     * @return array
     */
    public function fieldReadProvider()
    {
        return [
            [10, 1, 1, 'error', 'Vous n\'avez pas les permissions pour voir ces contenus'],
            [6, 1, 100, 'error', 'Champ inexistant'],
            [6, 300, 1, 'error', 'Impossible de trouver le site'],
            [6, 1, 1, 'success', ''],
        ];
    }

    /**
     * @dataProvider fieldReadProvider
     * @param $auth
     * @param $website
     * @param $id
     * @param $status
     * @param $result
     */
    public function testRead($auth, $website, $id, $status, $result)
    {
        $this->logoutAuth();
        $this->logAuth($auth);
        $response = $this->callMethod('Jet\AdminBlock\Controllers\CustomFieldController', 'read', ['auth' => $this->auth, 'website' => $website, 'id' => $id]);
        $this->assertEquals($status, $response['status']);
        if ($response['status'] != 'success')
            $this->assertEquals($result, $response['message']);
    }

}